services:
  beaverhabits:
    container_name: beaverhabits
    user: 1000:1000 # User permissions of your docker or default user.
    environment:
      # See the link below to find all the environment variables
      # https://github.com/daya0576/beaverhabits/wiki/Development#options
      - HABITS_STORAGE=USER_DISK # DATABASE stores in a single SQLite database named habits.db. USER_DISK option saves in a local json file.
      - TRUSTED_LOCAL_EMAIL=your@email.com # Skip authentication
      - INDEX_HABIT_DATE_COLUMNS=5 # Customize the date columns for the index page.
      - ENABLE_IOS_STANDALONE=true
    volumes:
      - /home/hick/homelab/containers/beaverhabits/data/:/app/.user/ # Change directory to match your docker file scheme.
    ports:
      - 8023:8080
    restart: unless-stopped
    image: daya0576/beaverhabits:latest
  
  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - /home/hick/homelab/containers/calibre-web/config:/config
      - /home/hick/homelab/containers/calibre-web/books:/books
    ports:
      - 8024:8083
    restart: unless-stopped
  
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8005:8080
  
  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    restart: unless-stopped
    ports:
      - 8018:8200
    volumes:
      - /home/hick/homelab/containers/duplicati/config:/config
      - /home/hick/backups:/backups
      - /:/source:ro
    environment:
      DUPLICATI__WEBSERVICE_ALLOWED_HOSTNAMES: server.local
      DUPLICATI__WEBSERVICE_PASSWORD: duplicati-pass
      PUID: 1000
      PGID: 1000
      SETTINGS_ENCRYPTION_KEY: duplicati-encryption-key
      TZ: "America/Cuiaba"
  
  excalidraw:
    image: ghcr.io/ozencb/excalidraw-persist:latest
    container_name: excalidraw
    restart: unless-stopped
    ports:
      - 8010:80

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    restart: unless-stopped
    user: "0:0" # Run as root to avoid permission issues
    ports:
      - 8015:80
    volumes:
      - filebrowser_data:/srv
      - filebrowser_database:/database
      - filebrowser_config:/config
      - /home/hick:/data
    environment:
      - FB_ROOT=/data
      - FB_NOAUTH=true
  
  glance:
    container_name: glance
    image: glanceapp/glance
    restart: unless-stopped
    volumes:
      - /home/hick/homelab/containers/glance/config:/app/config
      - /home/hick/homelab/containers/glance/assets:/app/assets
      - /etc/localtime:/etc/localtime:ro
      # Optionally, also mount docker socket if you want to use the docker containers widget
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 8007:8080
    env_file: /home/hick/homelab/containers/glance/.env
  
  go2rtc: # HTTP Port: 1984, RSTP Port: 8554, WebRTC Port: 8554
    image: alexxit/go2rtc
    container_name: go2rtc
    network_mode: host       # important for WebRTC, HomeKit, UDP cameras
    privileged: true         # only for FFmpeg hardware transcoding
    restart: unless-stopped  # autorestart on fail or config change from WebUI
    environment:
      - TZ=America/Cuiaba  # timezone in logs
    volumes:
      - "/home/hick/homelab/containers/go2rtc/config:/config"   # folder for go2rtc.yaml file (edit from WebUI)

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - 8004:3000
    volumes:
      - grafana-storage:/var/lib/grafana
  
  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    volumes:
      - /home/hick/homelab/containers/homeassistant/data/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host  # Port 8123

  it-tools:
    image: corentinth/it-tools:latest
    container_name: it-tools
    restart: unless-stopped
    ports:
      - 8013:80
  
  nextcloud:
    image: nextcloud:stable-apache
    container_name: nextcloud
    # Currently needs to be run as root, if we run as uid 1000 this fails
    # https://github.com/nextcloud/docker/blob/05026b029d37fc5cd488d4a4a2a79480e39841ba/21.0/apache/entrypoint.sh#L53-L77
    # user: "1000:1000"
    restart: on-failure
    ports:
      - 8002:80
    volumes:
      - /home/hick/homelab/containers/nextcloud/data:/var/www/html
      - /home/hick/homelab/containers/nextcloud/db:/var/lib/mysql
    environment:
      - MYSQL_HOST=nextcloud-db
      - REDIS_HOST=nextcloud-redis
      - MYSQL_PASSWORD=moneyprintergobrrr
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - NEXTCLOUD_TRUSTED_DOMAINS=server.local:8002 172.16.0.2:8002
    depends_on:
      - nextcloud-db
      - nextcloud-redis
  
  nextcloud-db:
    image: mariadb:10.5.8
    container_name: nextcloud-db
    user: 1000:1000
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: on-failure
    volumes:
      - /home/hick/homelab/containers/nextcloud-db/db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=moneyprintergobrrr
      - MYSQL_PASSWORD=moneyprintergobrrr
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
  
  nextcloud-redis:
    image: redis:6.2.2-buster
    container_name: nextcloud-redis
    user: 1000:1000
    restart: on-failure
    volumes:
      - /home/hick/homelab/containers/nextcloud-redis/data:/data
  
  ocular-backend:
    image: ghcr.io/simonwep/genesis:v1.4.1
    container_name: ocular-backend
    restart: unless-stopped
    volumes:
      - /home/hick/homelab/containers/ocular/data:/app/.data
    command: start
    environment:
      - GENESIS_PORT
      - GENESIS_DB_PATH
      - GENESIS_CREATE_USERS
      - GENESIS_AUTHORIZED_URIS
      - GENESIS_JWT_SECRET
      - GENESIS_JWT_TOKEN_EXPIRATION
      - GENESIS_JWT_COOKIE_ALLOW_HTTP
      - GENESIS_USERNAME_PATTERN
      - GENESIS_KEY_PATTERN
      - GENESIS_DATA_MAX_SIZE
      - GENESIS_KEYS_PER_USER
      - GENESIS_GIN_MODE
      - GENESIS_LOG_MODE

  ocular-frontend:
    image: ghcr.io/simonwep/ocular:v1.12.0
    container_name: ocular-frontend
    restart: unless-stopped
    environment:
      - OCULAR_DEMO

  ocular-nginx:
    image: nginx:1.26-alpine
    container_name: ocular-nginx
    restart: unless-stopped
    ports:
      - 8020:80
    volumes:
      - /home/hick/homelab/containers/ocular/config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - ocular-backend
      - ocular-frontend
  
  pinepods-db:
    container_name: pinepods-db
    image: postgres:latest
    environment:
      POSTGRES_DB: pinepods_database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: myS3curepass
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - /home/hick/homelab/containers/pinepods/data/pgdata:/var/lib/postgresql/data
    restart: always

  pinepods-valkey:
    image: valkey/valkey:8-alpine
    restart: unless-stopped
    container_name: pinepods-valkey

  pinepods:
    image: madeofpendletonwool/pinepods:latest
    container_name: pinepods
    restart: unless-stopped
    ports:
      - "8017:8040"
    environment:
      # Basic Server Info
      SEARCH_API_URL: 'https://search.pinepods.online/api/search'
      PEOPLE_API_URL: 'https://people.pinepods.online'
      HOSTNAME: 'http://localhost:8040'
      # Default Admin User Information
      USERNAME: hick
      PASSWORD: pinepods-pass
      FULLNAME: Henrique Sebasti√£o
      EMAIL: contato@henriquesebastiao.com
      # Database Vars
      DB_TYPE: postgresql
      DB_HOST: pinepods-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: myS3curepass
      DB_NAME: pinepods_database
      # Valkey Settings
      VALKEY_HOST: pinepods-valkey
      VALKEY_PORT: 6379
      # Enable or Disable Debug Mode for additional Printing
      DEBUG_MODE: false
      PUID: 1000
      PGID: 1000
      # Add timezone configuration
      TZ: "America/Cuiaba"
    volumes:
      # Mount the download and backup locations on the server
      - /home/hick/homelab/containers/pinepods/data/downloads:/opt/pinepods/downloads
      - /home/hick/homelab/containers/pinepods/data/backups:/opt/pinepods/backups
      # Timezone volumes, HIGHLY optional. Read the timezone notes below
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      - pinepods-db
      - pinepods-valkey
  
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - 8009:9000
  
  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    restart: unless-stopped
    container_name: speedtest-tracker
    ports:
        - 8008:80
    environment:
        - PUID=1000
        - PGID=1000
        - APP_KEY=base64:h/7HdA9fMLDluj0fJ4NcG13CquLdgJTs9062lfXnmAs=
        - DB_CONNECTION=sqlite
        - APP_TIMEZONE=America/Cuiaba
        - APP_DEBUG=true
        - SPEEDTEST_SCHEDULE=*/30 * * * *
    volumes:
        - /home/hick/homelab/containers/speedtest-tracker/config:/config
        - /home/hick/homelab/containers/speedtest-tracker/config/keys:/config/keys

  stirling-pdf:
    image: docker.stirlingpdf.com/stirlingtools/stirling-pdf:latest
    container_name: stirling-pdf
    restart: unless-stopped
    ports:
      - 8011:8080
    environment:
      - LANGS=pt_BR
      - DISABLE_ADDITIONAL_FEATURES=true
  
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    container_name: umami
    ports:
      - 8006:3000
    environment:
      DATABASE_URL: postgresql://umami:umami@umami-db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: ljVRotlgItt2dHR8TgvXvfKAfvf6AFiydmNfvKx-7oE
    depends_on:
      umami-db:
        condition: service_healthy
    init: true
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5

  umami-db:
    image: postgres:15-alpine
    container_name: umami-db
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: umami
    volumes:
      - umami-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U umami -d umami"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      DOMAIN: "https://vault.henriquesebastiao.com"
    volumes:
      - /home/hick/homelab/containers/vaultwarden/data/:/data/
    ports:
      - 8019:80
  
  wallos:
    container_name: wallos
    image: bellamy/wallos:latest
    ports:
      - 8021:80
    environment:
      TZ: America/Cuiaba
    # Volumes store your data between container upgrades
    volumes:
      - /home/hick/homelab/containers/wallos/db:/var/www/html/db
      - /home/hick/homelab/containers/wallos/logos:/var/www/html/images/uploads/logos
    restart: unless-stopped
  
  web-check:
    image: lissy93/web-check:latest
    container_name: web-check
    restart: unless-stopped
    ports:
      - 8012:3000
  
  zabbix-frontend:
    image: zabbix/zabbix-web-nginx-pgsql:7.2.7-alpine@sha256:782f2997890cda38c971f35f4626f1d6121125b1ae178bd9f797ceb8f3db8675
    hostname: zabbix-frontend
    container_name: zabbix-frontend
    restart: on-failure
    environment:
      DB_SERVER_HOST: zabbix-database
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: UTC
    ports:
      - 8003:8080
    depends_on:
      - zabbix-server
      - zabbix-database

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:7.2.7-alpine@sha256:6512317f2569b98e9cc51e6306549f6b82cc19d03facf5accb90dec53f92ebf5
    container_name: zabbix-server
    hostname: zabbix-server
    restart: on-failure
    init: true
    environment:
      DB_SERVER_HOST: zabbix-database
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix
    ports:
      - 10050:10050
    depends_on:
      - zabbix-database

  zabbix-agent:
    image: zabbix/zabbix-agent2:7.2.7-alpine@sha256:3046176ae40fd5c8dbb8f6d54fcf6e42f94bd11646bf82a890569b37ae10ff46
    container_name: zabbix-agent
    hostname: zabbix-agent
    restart: on-failure
    init: true
    environment:
      ZBX_HOSTNAME: zabbix-agent
      ZBX_SERVER_HOST: zabbix-server

  zabbix-database:
    image: postgres:13.18-alpine3.20@sha256:77815c1f18ae761b0e503503a494475a03149d7ce544934ccecdbafdb3956c94
    container_name: zabbix-database
    hostname: zabbix-database
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: zabbix
      POSTGRES_USER: zabbix
      POSTGRES_DB: zabbix
    volumes:
      - /home/hick/homelab/containers/zabbix/data:/var/lib/postgresql/data

volumes:
  filebrowser_data:
  filebrowser_database:
  filebrowser_config:
  grafana-storage:
  portainer_data:
  umami-db-data: