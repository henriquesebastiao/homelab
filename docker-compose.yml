services:
  beaverhabits:
    container_name: beaverhabits
    user: 1000:1000 # User permissions of your docker or default user.
    environment:
      # See the link below to find all the environment variables
      # https://github.com/daya0576/beaverhabits/wiki/Development#options
      - HABITS_STORAGE=USER_DISK # DATABASE stores in a single SQLite database named habits.db. USER_DISK option saves in a local json file.
      - TRUSTED_LOCAL_EMAIL=your@email.com # Skip authentication
      - INDEX_HABIT_DATE_COLUMNS=5 # Customize the date columns for the index page.
      - ENABLE_IOS_STANDALONE=true
    volumes:
      - /home/hick/homelab/containers/beaverhabits/data/:/app/.user/ # Change directory to match your docker file scheme.
    ports:
      - 8023:8080
    restart: unless-stopped
    image: daya0576/beaverhabits:latest
  
  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: calibre-web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional
    volumes:
      - /home/hick/homelab/containers/calibre-web/config:/config
      - /home/hick/homelab/containers/calibre-web/books:/books
    ports:
      - 8024:8083
    restart: unless-stopped
  
  downtify:
    container_name: downtify
    image: henriquesebastiao/downtify:latest@sha256:31b9a22462b21cb79e23047075b0ab293adf4a452878c066cfd05af520786a3d
    ports:
      - '8035:8000'
    volumes:
      - /home/hick/homelab/containers/downtify/downloads:/downloads
  
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8005:8080
  
  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    restart: unless-stopped
    ports:
      - 8018:8200
    volumes:
      - /home/hick/homelab/containers/duplicati/config:/config
      - /home/hick/backups:/backups
      - /:/source:ro
    environment:
      DUPLICATI__WEBSERVICE_ALLOWED_HOSTNAMES: server.local
      DUPLICATI__WEBSERVICE_PASSWORD: duplicati-pass
      # Executing as root to be able to read all files.
      PUID: 0
      PGID: 0
      SETTINGS_ENCRYPTION_KEY: duplicati-encryption-key
      TZ: "America/Cuiaba"

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    restart: unless-stopped
    user: "0:0" # Run as root to avoid permission issues
    ports:
      - 8015:80
    volumes:
      - filebrowser_data:/srv
      - filebrowser_database:/database
      - filebrowser_config:/config
      - /home/hick:/data
    environment:
      - FB_ROOT=/data
      - FB_NOAUTH=true
  
  gitea:
    image: docker.gitea.com/gitea:1.24.6-rootless
    container_name: gitea
    restart: always
    volumes:
      - /home/hick/homelab/containers/gitea/data:/var/lib/gitea
      - /home/hick/homelab/containers/gitea/config:/etc/gitea
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8017:3000
      - 8202:2222
  
  glance:
    container_name: glance
    image: glanceapp/glance
    restart: unless-stopped
    volumes:
      - /home/hick/homelab/containers/glance/config:/app/config
      - /home/hick/homelab/containers/glance/assets:/app/assets
      - /etc/localtime:/etc/localtime:ro
      # Optionally, also mount docker socket if you want to use the docker containers widget
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 8007:8080
    env_file: /home/hick/homelab/containers/glance/.env
  
  go2rtc: # HTTP Port: 1984, RSTP Port: 8554, WebRTC Port: 8554
    image: alexxit/go2rtc
    container_name: go2rtc
    network_mode: host       # important for WebRTC, HomeKit, UDP cameras
    privileged: true         # only for FFmpeg hardware transcoding
    restart: unless-stopped  # autorestart on fail or config change from WebUI
    environment:
      - TZ=America/Cuiaba  # timezone in logs
    volumes:
      - "/home/hick/homelab/containers/go2rtc/config:/config"   # folder for go2rtc.yaml file (edit from WebUI)

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - 8004:3000
    volumes:
      - grafana-storage:/var/lib/grafana
  
  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    volumes:
      - /home/hick/homelab/containers/homeassistant/data/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host  # Port 8123
  
  immich:
    container_name: immich
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - /home/hick/homelab/containers/immich/data:/data # Directory where photos and videos are stored
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - 8025:2283
    depends_on:
      - immich-redis
      - immich-db
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich-machine-learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false

  immich-redis:
    container_name: immich-redis
    hostname: redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:fea8b3e67b15729d4bb70589eb03367bab9ad1ee89c876f54327fc7c6e618571
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  immich-db:
    container_name: immich-postgres
    hostname: database
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:8d292bdb796aa58bbbaa47fe971c8516f6f57d6a47e7172e62754feb6ed4e7b0
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
      # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
      # DB_STORAGE_TYPE: 'HDD'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - /home/hick/homelab/containers/immich-db/db:/var/lib/postgresql/data
    shm_size: 128mb
    restart: always

  it-tools:
    image: corentinth/it-tools:latest
    container_name: it-tools
    restart: unless-stopped
    ports:
      - 8013:80
  
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    network_mode: 'host'
    volumes:
      - /home/hick/homelab/containers/jellyfin/config:/config
      - /home/hick/homelab/containers/jellyfin/cache:/cache
      - type: bind
        source: /home/hick/homelab/containers/jellyfin/media
        target: /media
    restart: 'unless-stopped'
    # Optional - alternative address used for autodiscovery
    environment:
      - JELLYFIN_PublishedServerUrl=http://server.local:8096
  
  librespeed:
    container_name: librespeed
    image: ghcr.io/librespeed/speedtest:latest
    restart: always
    environment:
      MODE: standalone
      #TITLE: "LibreSpeed"
      #TELEMETRY: "false"
      #ENABLE_ID_OBFUSCATION: "false"
      #REDACT_IP_ADDRESSES: "false"
      #PASSWORD:
      #EMAIL:
      #DISABLE_IPINFO: "false"
      #IPINFO_APIKEY: "your api key"
      #DISTANCE: "km"
      #WEBPORT: 8080
    ports:
      - 8030:8080 # webport mapping (host:container)
  
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    ports:
      - 8027:5678
    environment:
      - GENERIC_TIMEZONE=America/Cuiaba
      - TZ=America/Cuiaba
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - N8N_SECURE_COOKIE=false
    volumes:
      - /home/hick/homelab/containers/n8n/data:/home/node/.n8n
  
  nextcloud:
    image: nextcloud:stable-apache
    container_name: nextcloud
    # Currently needs to be run as root, if we run as uid 1000 this fails
    # https://github.com/nextcloud/docker/blob/05026b029d37fc5cd488d4a4a2a79480e39841ba/21.0/apache/entrypoint.sh#L53-L77
    # user: "1000:1000"
    restart: on-failure
    ports:
      - 8002:80
    volumes:
      - /home/hick/homelab/containers/nextcloud/data:/var/www/html
      - /home/hick/homelab/containers/nextcloud/db:/var/lib/mysql
    environment:
      - MYSQL_HOST=nextcloud-db
      - REDIS_HOST=nextcloud-redis
      - MYSQL_PASSWORD=moneyprintergobrrr
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - NEXTCLOUD_TRUSTED_DOMAINS=server.local:8002 172.16.0.2:8002
    depends_on:
      - nextcloud-db
      - nextcloud-redis
  
  nextcloud-db:
    image: mariadb:10.5.8
    container_name: nextcloud-db
    user: 1000:1000
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: on-failure
    volumes:
      - /home/hick/homelab/containers/nextcloud-db/db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=moneyprintergobrrr
      - MYSQL_PASSWORD=moneyprintergobrrr
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
  
  nextcloud-redis:
    image: redis:6.2.2-buster
    container_name: nextcloud-redis
    user: 1000:1000
    restart: on-failure
    volumes:
      - /home/hick/homelab/containers/nextcloud-redis/data:/data
  
  onlyoffice:
    image: onlyoffice/documentserver:latest
    container_name: onlyoffice
    restart: unless-stopped
    ports:
      - 8034:80
    volumes:
      - /home/hick/homelab/containers/onlyoffice/data:/var/www/onlyoffice/Data
      - /home/hick/homelab/containers/onlyoffice/logs:/var/log/onlyoffice
      - /home/hick/homelab/containers/onlyoffice/lib:/var/lib/onlyoffice
      - /home/hick/homelab/containers/onlyoffice/db:/var/lib/postgresql/data
    environment:
      - JWT_SECRET=my_jwt_secret
      - JWT_ENABLED=true
  
  paperless-broker:
    image: docker.io/library/redis:8
    container_name: paperless-broker
    restart: unless-stopped
    volumes:
      - /home/hick/homelab/containers/paperless-broker/data:/data

  paperless-db:
    image: docker.io/library/postgres:17
    container_name: paperless-db
    restart: unless-stopped
    volumes:
      - /home/hick/homelab/containers/paperless-db/data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless

  paperless-webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless-webserver
    restart: unless-stopped
    depends_on:
      - paperless-db
      - paperless-broker
      - paperless-gotenberg
      - paperless-tika
    ports:
      - 8028:8000
    volumes:
      - /home/hick/homelab/containers/paperless/data:/usr/src/paperless/data
      - /home/hick/homelab/containers/paperless/media:/usr/src/paperless/media
      - /home/hick/homelab/containers/paperless/export:/usr/src/paperless/export
      - /home/hick/homelab/containers/paperless/consume:/usr/src/paperless/consume
    env_file: paperless.env
    environment:
      PAPERLESS_REDIS: redis://paperless-broker:6379
      PAPERLESS_DBHOST: paperless-db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998

  paperless-gotenberg:
    image: docker.io/gotenberg/gotenberg:8.22
    container_name: paperless-gotenberg
    restart: unless-stopped
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  paperless-tika:
    image: docker.io/apache/tika:latest
    container_name: paperless-tika
    restart: unless-stopped
  
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      # DNS Ports
      - "53:53/tcp"
      - "53:53/udp"
      # Default HTTP Port
      - "8001:80/tcp"
      # Default HTTPs Port. FTL will generate a self-signed certificate
      #- "443:443/tcp"
      # Uncomment the line below if you are using Pi-hole as your DHCP server
      #- "67:67/udp"
      # Uncomment the line below if you are using Pi-hole as your NTP server
      #- "123:123/udp"
    environment:
      # Set the appropriate timezone for your location (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones), e.g:
      TZ: 'America/Cuiaba'
      # Set a password to access the web interface. Not setting one will result in a random password being assigned
      FTLCONF_webserver_api_password: ${PIHOLE_PASSWORD:-pihole-pass}
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_dns_upstreams: 1.1.1.1;1.0.0.1
    # Volumes store your data between container upgrades
    volumes:
      # For persisting Pi-hole's databases and common configuration file
      - '/home/hick/homelab/containers/pihole/etc:/etc/pihole'
      # Uncomment the below if you have custom dnsmasq config files that you want to persist. Not needed for most starting fresh with Pi-hole v6. If you're upgrading from v5 you and have used this directory before, you should keep it enabled for the first v6 container start to allow for a complete migration. It can be removed afterwards. Needs environment variable FTLCONF_misc_etc_dnsmasq_d: 'true'
      #- './etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      # See https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
      # Required if you are using Pi-hole as your DHCP server, else not needed
      - NET_ADMIN
      # Required if you are using Pi-hole as your NTP client to be able to set the host's system time
      - SYS_TIME
      # Optional, if Pi-hole should get some more processing time
      - SYS_NICE
    restart: unless-stopped
  
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - 8009:9000
  
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Cuiaba
      - WEBUI_PORT=8033
      - TORRENTING_PORT=6881
    volumes:
      - /home/hick/homelab/containers/qbittorrent/config:/config
      - /home/hick/homelab/containers/qbittorrent/downloads:/downloads #optional
    ports:
      - 8033:8033
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
  
  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    restart: unless-stopped
    container_name: speedtest-tracker
    ports:
        - 8008:80
    environment:
        - PUID=1000
        - PGID=1000
        - APP_KEY=base64:h/7HdA9fMLDluj0fJ4NcG13CquLdgJTs9062lfXnmAs=
        - DB_CONNECTION=sqlite
        - APP_TIMEZONE=America/Cuiaba
        - APP_DEBUG=true
        - SPEEDTEST_SCHEDULE=*/30 * * * *
    volumes:
        - /home/hick/homelab/containers/speedtest-tracker/config:/config
        - /home/hick/homelab/containers/speedtest-tracker/config/keys:/config/keys
    
  syncthing:
    image: syncthing/syncthing
    container_name: syncthing
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /home/hick/homelab/containers/syncthing:/var/syncthing
    ports:
      - 8032:8384 # Web UI
      - 22000:22000/tcp # TCP file transfers
      - 22000:22000/udp # QUIC file transfers
      - 21027:21027/udp # Receive local discovery broadcasts
    restart: unless-stopped
    healthcheck:
      test: curl -fkLsS -m 2 127.0.0.1:8384/rest/noauth/health | grep -o --color=never OK || exit 1
      interval: 1m
      timeout: 10s
      retries: 3

  stirling-pdf:
    image: docker.stirlingpdf.com/stirlingtools/stirling-pdf:latest
    container_name: stirling-pdf
    restart: unless-stopped
    ports:
      - 8011:8080
    environment:
      - LANGS=pt_BR
      - DISABLE_ADDITIONAL_FEATURES=true
    
  traccar:
    image: traccar/traccar:latest
    container_name: traccar
    restart: unless-stopped
    ports:
      - 8031:8082
      - 5000-5300:5000-5300
      - 5000-5300:5000-5300/udp
    volumes:
      - /home/hick/homelab/containers/traccar/data:/opt/traccar/data:rw
      - /home/hick/homelab/containers/traccar/logs:/opt/traccar/logs:rw
  
  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    container_name: umami
    ports:
      - 8006:3000
    environment:
      DATABASE_URL: postgresql://umami:umami@umami-db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: ljVRotlgItt2dHR8TgvXvfKAfvf6AFiydmNfvKx-7oE
    depends_on:
      umami-db:
        condition: service_healthy
    init: true
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5

  umami-db:
    image: postgres:15-alpine
    container_name: umami-db
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: umami
    volumes:
      - umami-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U umami -d umami"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - /home/hick/homelab/containers/uptime-kuma/data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8026:3001
    restart: always
  
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      DOMAIN: "https://vault.henriquesebastiao.com"
    volumes:
      - /home/hick/homelab/containers/vaultwarden/data/:/data/
    ports:
      - 8019:80
  
  wallos:
    container_name: wallos
    image: bellamy/wallos:latest
    ports:
      - 8021:80
    environment:
      TZ: America/Cuiaba
    # Volumes store your data between container upgrades
    volumes:
      - /home/hick/homelab/containers/wallos/db:/var/www/html/db
      - /home/hick/homelab/containers/wallos/logos:/var/www/html/images/uploads/logos
    restart: unless-stopped
  
  web-check:
    image: lissy93/web-check:latest
    container_name: web-check
    restart: unless-stopped
    ports:
      - 8012:3000
  
  zabbix-frontend:
    image: zabbix/zabbix-web-nginx-pgsql:7.2.7-alpine@sha256:782f2997890cda38c971f35f4626f1d6121125b1ae178bd9f797ceb8f3db8675
    hostname: zabbix-frontend
    container_name: zabbix-frontend
    restart: on-failure
    environment:
      DB_SERVER_HOST: zabbix-database
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: UTC
    ports:
      - 8003:8080
    depends_on:
      - zabbix-server
      - zabbix-database

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:7.2.7-alpine@sha256:6512317f2569b98e9cc51e6306549f6b82cc19d03facf5accb90dec53f92ebf5
    container_name: zabbix-server
    hostname: zabbix-server
    restart: on-failure
    init: true
    environment:
      DB_SERVER_HOST: zabbix-database
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix
    ports:
      - 10050:10050
    depends_on:
      - zabbix-database

  zabbix-agent:
    image: zabbix/zabbix-agent2:7.2.7-alpine@sha256:3046176ae40fd5c8dbb8f6d54fcf6e42f94bd11646bf82a890569b37ae10ff46
    container_name: zabbix-agent
    hostname: zabbix-agent
    restart: on-failure
    init: true
    environment:
      ZBX_HOSTNAME: zabbix-agent
      ZBX_SERVER_HOST: zabbix-server

  zabbix-database:
    image: postgres:13.18-alpine3.20@sha256:77815c1f18ae761b0e503503a494475a03149d7ce544934ccecdbafdb3956c94
    container_name: zabbix-database
    hostname: zabbix-database
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: zabbix
      POSTGRES_USER: zabbix
      POSTGRES_DB: zabbix
    volumes:
      - /home/hick/homelab/containers/zabbix/data:/var/lib/postgresql/data

volumes:
  filebrowser_data:
  filebrowser_database:
  filebrowser_config:
  grafana-storage:
  model-cache:
  portainer_data:
  umami-db-data: